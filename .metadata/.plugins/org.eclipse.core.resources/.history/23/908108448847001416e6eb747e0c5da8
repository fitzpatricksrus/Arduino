/*
 * MatrixPattern.cpp
 *
 *  Created on: Sep 26, 2014
 *      Author: Dad
 */

#include "MatrixPattern.h"

//------------------------------------------
// quick utility class to allow easy access to array of row values

class RealMatrixColumn : public MatrixPattern::MatrixColumn {
	RealMatrixColumn(int* values);
	virtual ~RealMatrixColumn();
	virtual int operator[](int rowIndex) const;
	virtual int& operator[](int rowIndex);
	int* values;
};

RealMatrixColumn::~RealMatrixColumn() {
}

RealMatrixColumn::RealMatrixColumn(int* valuesIn)
: values(valuesIn)
{
}

int RealMatrixColumn::operator[](int rowIndex) const {
	return values[rowIndex];
}

int& RealMatrixColumn::operator[](int rowIndex) {
	return values[rowIndex];
}

//------------------------------------------

MatrixPattern::~MatrixPattern() {

}
int MatrixPattern::getRowCount() const {

}
int MatrixPattern::getColumnCount() const {

}
int MatrixPattern::getValue(int row, int column) const {

}
MatrixColumn const & MatrixPattern::operator[](int columnIndex) const {
}

MatrixColumn& MatrixPattern::operator[](int columnIndex) {
}

template <int cols, int rows>
static MatrixPattern* MatrixPattern::create(int[cols][rows]) {

}
